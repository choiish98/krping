!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDR_RESOLVED	krping.c	/^	ADDR_RESOLVED,$/;"	e	enum:test_state	file:
CONNECTED	krping.c	/^	CONNECTED,$/;"	e	enum:test_state	file:
CONNECT_REQUEST	krping.c	/^	CONNECT_REQUEST,$/;"	e	enum:test_state	file:
DEBUG_LOG	krping.c	/^#define DEBUG_LOG /;"	d	file:
ERROR	krping.c	/^	ERROR$/;"	e	enum:test_state	file:
IDLE	krping.c	/^	IDLE = 1,$/;"	e	enum:test_state	file:
KOBJ	Makefile	/^KOBJ=\/lib\/modules\/`uname -r`\/build$/;"	m
KSRC	Makefile	/^KSRC=\/lib\/modules\/`uname -r`\/build$/;"	m
OPT_INT	getopt.h	/^#define OPT_INT	/;"	d
OPT_NOPARAM	getopt.h	/^#define OPT_NOPARAM	/;"	d
OPT_STRING	getopt.h	/^#define OPT_STRING	/;"	d
PFX	krping.c	/^#define PFX /;"	d	file:
RDMA_READ_ADV	krping.c	/^	RDMA_READ_ADV,$/;"	e	enum:test_state	file:
RDMA_READ_COMPLETE	krping.c	/^	RDMA_READ_COMPLETE,$/;"	e	enum:test_state	file:
RDMA_WRITE_ADV	krping.c	/^	RDMA_WRITE_ADV,$/;"	e	enum:test_state	file:
RDMA_WRITE_COMPLETE	krping.c	/^	RDMA_WRITE_COMPLETE,$/;"	e	enum:test_state	file:
ROUTE_RESOLVED	krping.c	/^	ROUTE_RESOLVED,$/;"	e	enum:test_state	file:
RPING_BUFSIZE	krping.c	/^#define RPING_BUFSIZE /;"	d	file:
RPING_SQ_DEPTH	krping.c	/^#define RPING_SQ_DEPTH /;"	d	file:
_KRPING_GETOPT_H	getopt.h	/^#define _KRPING_GETOPT_H$/;"	d
addr	krping.c	/^	u8 addr[16];			\/* dst addr in NBO *\/$/;"	m	struct:krping_cb	file:
addr_str	krping.c	/^	char *addr_str;			\/* dst addr string *\/$/;"	m	struct:krping_cb	file:
addr_type	krping.c	/^	uint8_t addr_type;		\/* ADDR_FAMILY - IPv4\/V6 *\/$/;"	m	struct:krping_cb	file:
buf	krping.c	/^	uint64_t buf;$/;"	m	struct:krping_rdma_info	file:
bw	krping.c	/^	int bw;				\/* run bw test *\/$/;"	m	struct:krping_cb	file:
bw_test	krping.c	/^static void bw_test(struct krping_cb *cb)$/;"	f	file:
child_cm_id	krping.c	/^	struct rdma_cm_id *child_cm_id;	\/* connection on server side *\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::rdma_cm_id	file:
client_recv	krping.c	/^static int client_recv(struct krping_cb *cb, struct ib_wc *wc)$/;"	f	file:
cm_id	krping.c	/^	struct rdma_cm_id *cm_id;	\/* connection on client side,*\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::rdma_cm_id	file:
count	krping.c	/^	int count;			\/* ping count *\/$/;"	m	struct:krping_cb	file:
cq	krping.c	/^	struct ib_cq *cq;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_cq	file:
debug	krping.c	/^static int debug = 0;$/;"	v	file:
dma_mr	krping.c	/^	struct ib_mr *dma_mr;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_mr	file:
duplex	krping.c	/^	int duplex;			\/* run bw full duplex test *\/$/;"	m	struct:krping_cb	file:
fill_sockaddr	krping.c	/^static void fill_sockaddr(struct sockaddr_storage *sin, struct krping_cb *cb)$/;"	f	file:
flush_qp	krping.c	/^static void flush_qp(struct krping_cb *cb)$/;"	f	file:
frtest	krping.c	/^	int frtest;			\/* reg test *\/$/;"	m	struct:krping_cb	file:
has_arg	getopt.h	/^	unsigned int has_arg;$/;"	m	struct:krping_option
htonll	krping.c	/^#define htonll(/;"	d	file:
invalidate_wr	krping.c	/^	struct ib_send_wr invalidate_wr;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_send_wr	file:
ip6_ndev_name	krping.c	/^	char ip6_ndev_name[128];	\/* IPv6 netdev name *\/$/;"	m	struct:krping_cb	file:
key	krping.c	/^	u8 key;$/;"	m	struct:krping_cb	file:
krping_accept	krping.c	/^static int krping_accept(struct krping_cb *cb)$/;"	f	file:
krping_bind_client	krping.c	/^static int krping_bind_client(struct krping_cb *cb)$/;"	f	file:
krping_bind_server	krping.c	/^static int krping_bind_server(struct krping_cb *cb)$/;"	f	file:
krping_bw_test_client	krping.c	/^static void krping_bw_test_client(struct krping_cb *cb)$/;"	f	file:
krping_bw_test_server	krping.c	/^static void krping_bw_test_server(struct krping_cb *cb)$/;"	f	file:
krping_cb	krping.c	/^struct krping_cb {$/;"	s	file:
krping_cma_event_handler	krping.c	/^static int krping_cma_event_handler(struct rdma_cm_id *cma_id,$/;"	f	file:
krping_connect_client	krping.c	/^static int krping_connect_client(struct krping_cb *cb)$/;"	f	file:
krping_cq_event_handler	krping.c	/^static void krping_cq_event_handler(struct ib_cq *cq, void *ctx)$/;"	f	file:
krping_create_qp	krping.c	/^static int krping_create_qp(struct krping_cb *cb)$/;"	f	file:
krping_doit	krping.c	/^int krping_doit(char *cmd)$/;"	f
krping_exit	krping.c	/^module_exit(krping_exit);$/;"	v
krping_exit	krping.c	/^static void __exit krping_exit(void)$/;"	f	file:
krping_format_send	krping.c	/^static void krping_format_send(struct krping_cb *cb, u64 buf)$/;"	f	file:
krping_fr_test	krping.c	/^static void krping_fr_test(struct krping_cb *cb)$/;"	f	file:
krping_free_buffers	krping.c	/^static void krping_free_buffers(struct krping_cb *cb)$/;"	f	file:
krping_free_qp	krping.c	/^static void krping_free_qp(struct krping_cb *cb)$/;"	f	file:
krping_getopt	getopt.c	/^int krping_getopt(const char *caller, char **options, $/;"	f
krping_init	krping.c	/^module_init(krping_init);$/;"	v
krping_init	krping.c	/^static int __init krping_init(void)$/;"	f	file:
krping_ops	krping.c	/^static struct file_operations krping_ops = {$/;"	v	typeref:struct:file_operations	file:
krping_option	getopt.h	/^struct krping_option {$/;"	s
krping_opts	krping.c	/^static const struct krping_option krping_opts[] = {$/;"	v	typeref:struct:krping_option	file:
krping_proc	krping.c	/^static struct proc_dir_entry *krping_proc;$/;"	v	typeref:struct:proc_dir_entry	file:
krping_rdma_info	krping.c	/^struct krping_rdma_info {$/;"	s	file:
krping_rdma_rkey	krping.c	/^static u32 krping_rdma_rkey(struct krping_cb *cb, u64 buf, int post_inv)$/;"	f	file:
krping_read_open	krping.c	/^static int krping_read_open(struct inode *inode, struct file *file)$/;"	f	file:
krping_read_proc	krping.c	/^static int krping_read_proc(struct seq_file *seq, void *v)$/;"	f	file:
krping_rlat_test_client	krping.c	/^static void krping_rlat_test_client(struct krping_cb *cb)$/;"	f	file:
krping_rlat_test_server	krping.c	/^static void krping_rlat_test_server(struct krping_cb *cb)$/;"	f	file:
krping_run_client	krping.c	/^static void krping_run_client(struct krping_cb *cb)$/;"	f	file:
krping_run_server	krping.c	/^static void krping_run_server(struct krping_cb *cb)$/;"	f	file:
krping_setup_buffers	krping.c	/^static int krping_setup_buffers(struct krping_cb *cb)$/;"	f	file:
krping_setup_qp	krping.c	/^static int krping_setup_qp(struct krping_cb *cb, struct rdma_cm_id *cm_id)$/;"	f	file:
krping_setup_wr	krping.c	/^static void krping_setup_wr(struct krping_cb *cb)$/;"	f	file:
krping_stats	krping.c	/^struct krping_stats {$/;"	s	file:
krping_test_client	krping.c	/^static void krping_test_client(struct krping_cb *cb)$/;"	f	file:
krping_test_server	krping.c	/^static void krping_test_server(struct krping_cb *cb)$/;"	f	file:
krping_wlat_test_client	krping.c	/^static void krping_wlat_test_client(struct krping_cb *cb)$/;"	f	file:
krping_wlat_test_server	krping.c	/^static void krping_wlat_test_server(struct krping_cb *cb)$/;"	f	file:
krping_write_proc	krping.c	/^static ssize_t krping_write_proc(struct file * file, const char __user * buffer,$/;"	f	file:
list	krping.c	/^	struct list_head list;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::list_head	file:
local_dma_lkey	krping.c	/^	int local_dma_lkey;		\/* use 0 for lkey *\/$/;"	m	struct:krping_cb	file:
name	getopt.h	/^	const char *name;$/;"	m	struct:krping_option
ntohll	krping.c	/^#define ntohll(/;"	d	file:
page_list	krping.c	/^	struct ib_fast_reg_page_list *page_list;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_fast_reg_page_list	file:
page_list_len	krping.c	/^	int page_list_len;$/;"	m	struct:krping_cb	file:
pd	krping.c	/^	struct ib_pd *pd;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_pd	file:
poll	krping.c	/^	int poll;			\/* poll or block for rlat test *\/$/;"	m	struct:krping_cb	file:
port	krping.c	/^	uint16_t port;			\/* dst port in NBO *\/$/;"	m	struct:krping_cb	file:
qp	krping.c	/^	struct ib_qp *qp;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_qp	file:
rdma_buf	krping.c	/^	char *rdma_buf;			\/* used as rdma sink *\/$/;"	m	struct:krping_cb	file:
rdma_dma_addr	krping.c	/^	u64  rdma_dma_addr;$/;"	m	struct:krping_cb	file:
rdma_krping-y	Makefile	/^rdma_krping-y			:= getopt.o krping.o$/;"	m
rdma_mr	krping.c	/^	struct ib_mr *rdma_mr;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_mr	file:
rdma_sgl	krping.c	/^	struct ib_sge rdma_sgl;		\/* rdma single SGE *\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_sge	file:
rdma_sq_wr	krping.c	/^	struct ib_rdma_wr rdma_sq_wr;	\/* rdma work request record *\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_rdma_wr	file:
read_bytes	krping.c	/^	unsigned long long read_bytes;$/;"	m	struct:krping_stats	file:
read_inv	krping.c	/^	int read_inv;$/;"	m	struct:krping_cb	file:
read_msgs	krping.c	/^	unsigned long long read_msgs;$/;"	m	struct:krping_stats	file:
recv_bytes	krping.c	/^	unsigned long long recv_bytes;$/;"	m	struct:krping_stats	file:
recv_dma_addr	krping.c	/^	u64 recv_dma_addr;$/;"	m	struct:krping_cb	file:
recv_msgs	krping.c	/^	unsigned long long recv_msgs;$/;"	m	struct:krping_stats	file:
recv_sgl	krping.c	/^	struct ib_sge recv_sgl;		\/* recv single SGE *\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_sge	file:
reg_mr	krping.c	/^	struct ib_mr *reg_mr;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_mr	file:
reg_mr_wr	krping.c	/^	struct ib_reg_wr reg_mr_wr;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_reg_wr	file:
reg_supported	krping.c	/^static int reg_supported(struct ib_device *dev)$/;"	f	file:
remote_addr	krping.c	/^	uint64_t remote_addr;		\/* remote guys TO *\/$/;"	m	struct:krping_cb	file:
remote_len	krping.c	/^	uint32_t remote_len;		\/* remote guys LEN *\/$/;"	m	struct:krping_cb	file:
remote_rkey	krping.c	/^	uint32_t remote_rkey;		\/* remote guys RKEY *\/$/;"	m	struct:krping_cb	file:
rkey	krping.c	/^	uint32_t rkey;$/;"	m	struct:krping_rdma_info	file:
rlat	krping.c	/^	int rlat;			\/* run rlat test *\/$/;"	m	struct:krping_cb	file:
rlat_test	krping.c	/^static void rlat_test(struct krping_cb *cb)$/;"	f	file:
rq_wr	krping.c	/^	struct ib_recv_wr rq_wr;	\/* recv work request record *\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_recv_wr	file:
sem	krping.c	/^	wait_queue_head_t sem;$/;"	m	struct:krping_cb	file:
send_bytes	krping.c	/^	unsigned long long send_bytes;$/;"	m	struct:krping_stats	file:
send_dma_addr	krping.c	/^	u64 send_dma_addr;$/;"	m	struct:krping_cb	file:
send_msgs	krping.c	/^	unsigned long long send_msgs;$/;"	m	struct:krping_stats	file:
send_sgl	krping.c	/^	struct ib_sge send_sgl;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_sge	file:
server	krping.c	/^	int server;			\/* 0 iff client *\/$/;"	m	struct:krping_cb	file:
server_invalidate	krping.c	/^	int server_invalidate;$/;"	m	struct:krping_cb	file:
server_recv	krping.c	/^static int server_recv(struct krping_cb *cb, struct ib_wc *wc)$/;"	f	file:
size	krping.c	/^	int size;			\/* ping data size *\/$/;"	m	struct:krping_cb	file:
size	krping.c	/^	uint32_t size;$/;"	m	struct:krping_rdma_info	file:
sq_wr	krping.c	/^	struct ib_send_wr sq_wr;	\/* send work requrest record *\/$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_send_wr	file:
start_buf	krping.c	/^	char *start_buf;		\/* rdma read src *\/$/;"	m	struct:krping_cb	file:
start_dma_addr	krping.c	/^	u64  start_dma_addr;$/;"	m	struct:krping_cb	file:
start_mr	krping.c	/^	struct ib_mr *start_mr;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::ib_mr	file:
state	krping.c	/^	enum test_state state;		\/* used for cond\/signalling *\/$/;"	m	struct:krping_cb	typeref:enum:krping_cb::test_state	file:
stats	krping.c	/^	struct krping_stats stats;$/;"	m	struct:krping_cb	typeref:struct:krping_cb::krping_stats	file:
test_state	krping.c	/^enum test_state {$/;"	g	file:
tos	krping.c	/^	int tos;			\/* type of service *\/$/;"	m	struct:krping_cb	file:
txdepth	krping.c	/^	int txdepth;			\/* SQ depth *\/$/;"	m	struct:krping_cb	file:
val	getopt.h	/^	int val;$/;"	m	struct:krping_option
validate	krping.c	/^	int validate;			\/* validate ping data *\/$/;"	m	struct:krping_cb	file:
verbose	krping.c	/^	int verbose;			\/* verbose logging *\/$/;"	m	struct:krping_cb	file:
wlat	krping.c	/^	int wlat;			\/* run wlat test *\/$/;"	m	struct:krping_cb	file:
wlat_test	krping.c	/^static void wlat_test(struct krping_cb *cb)$/;"	f	file:
write_bytes	krping.c	/^	unsigned long long write_bytes;$/;"	m	struct:krping_stats	file:
write_msgs	krping.c	/^	unsigned long long write_msgs;$/;"	m	struct:krping_stats	file:
